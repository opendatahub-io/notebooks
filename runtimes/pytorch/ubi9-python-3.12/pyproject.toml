[project]
name = "pytorch-notebook"
version = "0.1.0"
requires-python = "==3.12.*"

dependencies = [
    # PyTorch packages
    "tensorboard~=2.20.0",
    "torch==2.6.0+cu126",
    "torchvision==0.21.0+cu126; platform_machine == 'x86_64'",
    "torchvision==0.21.0; platform_machine == 'aarch64'", # CUDA version not pre-built by pytorch for aarch64

    # torch deps that get missed by uv with universal resolution
    "nvidia-cuda-nvrtc-cu12==12.6.77 ; platform_machine == 'x86_64' and sys_platform == 'linux'",
    "nvidia-cuda-runtime-cu12==12.6.77 ; platform_machine == 'x86_64' and sys_platform == 'linux'",
    "nvidia-cuda-cupti-cu12==12.6.80 ; platform_machine == 'x86_64' and sys_platform == 'linux'",
    "nvidia-cudnn-cu12==9.5.1.17 ; platform_machine == 'x86_64' and sys_platform == 'linux'",
    "nvidia-cublas-cu12==12.6.4.1 ; platform_machine == 'x86_64' and sys_platform == 'linux'",
    "nvidia-cufft-cu12==11.3.0.4 ; platform_machine == 'x86_64' and sys_platform == 'linux'",
    "nvidia-curand-cu12==10.3.7.77 ; platform_machine == 'x86_64' and sys_platform == 'linux'",
    "nvidia-cusolver-cu12==11.7.1.2 ; platform_machine == 'x86_64' and sys_platform == 'linux'",
    "nvidia-cusparse-cu12==12.5.4.2 ; platform_machine == 'x86_64' and sys_platform == 'linux'",
    "nvidia-cusparselt-cu12==0.6.3 ; platform_machine == 'x86_64' and sys_platform == 'linux'",
    "nvidia-nccl-cu12==2.21.5 ; platform_machine == 'x86_64' and sys_platform == 'linux'",
    "nvidia-nvtx-cu12==12.6.77 ; platform_machine == 'x86_64' and sys_platform == 'linux'",
    "nvidia-nvjitlink-cu12==12.6.85 ; platform_machine == 'x86_64' and sys_platform == 'linux'",
    "triton==3.2.0 ; platform_machine == 'x86_64' and sys_platform == 'linux'",

    # Datascience and useful extensions
    "boto3~=1.40.27",
    "kafka-python-ng~=2.2.3",
    "matplotlib~=3.10.1",
    "numpy~=2.2.6",
    "pandas~=2.2.3",
    "plotly~=6.0.0",
    "scikit-learn~=1.6.1",
    "scipy~=1.15.2",
    "skl2onnx~=1.18.0",
    "onnxconverter-common~=1.13.0", # Required for skl2onnx, as upgraded version is not compatible with protobuf
    "codeflare-sdk~=0.31.0",
    "feast~=0.53.0",

    # DB connectors
    "pymongo~=4.11.2",
    "psycopg~=3.2.5",
    "pyodbc~=5.2.0",
    "mysql-connector-python~=9.3.0",

    # This is a comprehensive list of python dependencies that Elyra requires to execute Jupyter notebooks.
    "ipykernel~=6.29.5",
    "ipython~=9.0.1",
    "ipython-genutils~=0.2.0",
    "jinja2~=3.1.6",
    "jupyter-client~=8.6.3",
    "jupyter-core~=5.8.1",
    "markupsafe~=3.0.2",
    "minio~=7.2.15",
    "nbclient~=0.10.2",
    "nbconvert~=7.16.6",
    "nbformat~=5.10.4",
    "papermill~=2.6.0",
    "pyzmq~=26.2.1",
    "prompt-toolkit~=3.0.50",
    "requests~=2.32.3",
    "tornado~=6.5.2",
    "traitlets~=5.14.3",
    "urllib3~=2.5.0",

    # Base packages
    "setuptools==78.1.1",
    "wheel==0.45.1",
]

[tool.uv.sources]
torch = { index = "pytorch-cuda" }
torchvision = [
            { index = "pytorch-cuda", marker = "platform_machine == 'x86_64'" },
            { index = "pytorch-cpu", marker = "platform_machine == 'aarch64'" }]

# https://docs.astral.sh/uv/concepts/indexes/#package-indexes
[[tool.uv.index]]
name = "pytorch-cuda"
url = "https://download.pytorch.org/whl/cu126"
explicit = true

# Add CPU index for ARM64
[[tool.uv.index]]
name = "pytorch-cpu"
url = "https://download.pytorch.org/whl/cpu"
explicit = true

[tool.uv]
environments = [
    "sys_platform == 'linux' and implementation_name == 'cpython'",
]
