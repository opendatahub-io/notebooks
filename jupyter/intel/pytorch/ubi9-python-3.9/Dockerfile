ARG BASE_IMAGE
FROM ${BASE_IMAGE}

LABEL name="odh-notebook-jupyter-intel-pytorch-ubi9-python-3.9" \
    summary="Jupyter Intel速 optimized pytorch notebook image for ODH notebooks." \
    description="Jupyter Intel速 pytorch notebook image with base Python 3.9 builder image based on UBI9 for ODH notebooks" \
    io.k8s.display-name="Jupyter Intel速 optimized pytorch notebook image for ODH notebooks." \
    io.k8s.description="Jupyter Intel速 optimized pytorch notebook image with base Python 3.9 builder image based on UBI9 for ODH notebooks" \
    authoritative-source-url="https://github.com/opendatahub-io/notebooks" \
    io.openshift.build.commit.ref="main" \
    io.openshift.build.source-location="https://github.com/opendatahub-io/notebooks/tree/main/jupyter/intel/pytorch/ubi9-python-3.9" \
    io.openshift.build.image="quay.io/opendatahub/workbench-images:jupyter-intel-pytorch-ubi9-python-3.9"

USER root

ARG ONEAPI_VERSION=2024.0
COPY oneAPI.repo /etc/yum.repos.d/oneAPI.repo

RUN dnf update -y && \
    dnf install -y intel-oneapi-compiler-dpcpp-cpp-runtime-${ONEAPI_VERSION} \
        intel-oneapi-mkl-${ONEAPI_VERSION} \
        intel-oneapi-dnnl-${ONEAPI_VERSION} && \
    dnf clean all -y && \
    rm -rf /var/cache/dnf/* && \
    rm /etc/yum.repos.d/oneAPI.repo

USER 1001

WORKDIR /opt/app-root/bin

# Install Python packages and Jupyterlab extensions from poetry.lock and pyproject.toml
COPY poetry.lock.gpu poetry.lock
COPY pyproject.toml.gpu pyproject.toml

RUN echo "Installing softwares and packages" && \
    micropipenv install --method poetry && \
    rm -f ./poetry.lock ./pyproject.toml && \
    # Disable announcement plugin of jupyterlab \
    jupyter labextension disable "@jupyterlab/apputils-extension:announcements" && \
    chmod -R g+w /opt/app-root/lib/python3.9/site-packages && \
    fix-permissions /opt/app-root -P
    

#Replacing kernel manually with oneapi variable setting script
COPY --chown=1001:0 start-kernel /opt/app-root/bin/start-kernel
COPY --chown=1001:0 kernel-gpu.json /opt/app-root/share/jupyter/kernels/python3/kernel.json
COPY --chown=1001:0 start-notebook.sh /opt/app-root/bin
COPY --chown=1001:0 builder /opt/app-root/builder
COPY --chown=1001:0 utils /opt/app-root/bin/utils

#CPU env
ENV CPU_ENV=/opt/app-root-cpu
ENV GPU_ENV=/opt/app-root
COPY --chown=1001:0 poetry.lock.cpu ${CPU_ENV}/poetry.lock
COPY --chown=1001:0 pyproject.toml.cpu ${CPU_ENV}/pyproject.toml

WORKDIR ${CPU_ENV} 
RUN python3.9 -m venv ${CPU_ENV} && \
    chown -R 1001:0 ${CPU_ENV} && \
    fix-permissions ${CPU_ENV} -P && \
    source ${CPU_ENV}/bin/activate && \
    pip install --no-cache-dir -U "micropipenv[toml]" && \
    micropipenv install --method poetry && \
    rm -f ./poetry.lock ./pyproject.toml && \
    python -m ipykernel install --prefix=/opt/app-root --name 'pytorch-cpu' --display-name='pytorch-cpu' && \
    # Disable announcement plugin of jupyterlab \
    jupyter labextension disable "@jupyterlab/apputils-extension:announcements" && \
    chmod -R g+w ${CPU_ENV}/lib/python3.9/site-packages && \
    fix-permissions ${CPU_ENV} -P && \
    chmod -R g+w /opt/app-root/src

COPY --chown=1001:0 kernel-cpu.json /opt/app-root/share/jupyter/kernels/pytorch-cpu/kernel.json

WORKDIR /opt/app-root/src

ENV JUPYTER_PRELOAD_REPOS="https://github.com/IntelAI/oneAPI-samples"
ENV REPO_BRANCH="main"
ENTRYPOINT ["bash", "-c", "/opt/app-root/builder/run"]
