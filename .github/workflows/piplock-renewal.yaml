---
# This GitHub action is meant to update the pipfile.locks
name: Pipfile.locks Renewal Action

on:  # yamllint disable-line rule:truthy
  # Triggers the workflow every Wednesday at 1am UTC
  schedule:
    - cron: "0 1 * * 3"
  workflow_dispatch:  # for manual trigger workflow from GH Web UI
    inputs:
      branch:
        description: 'Specify branch'
        required: false
        default: 'main'
      python_version:
        description: 'Select a Python version to update Pipfile.lock'
        required: false
        default: '["3.11", "3.12"]'
        type: choice
        options:
          - '["3.11", "3.12"]'
          - '["3.12"]'
          - '["3.11"]'
          - '["3.9"]'
          - '["3.8"]'
      update_optional_dirs:
        description: 'Include optional directories in update'
        required: false
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'

jobs:
  refresh-pipfile-locks:
    runs-on: ubuntu-latest
    concurrency:
      group: refresh-pipfile-locks-${{ matrix.python-version }}-${{ github.ref }}
      cancel-in-progress: false
    strategy:
      fail-fast: false
      matrix:
        python-version: >-
          ${{ fromJSON( github.event.inputs.python_version || '["3.11", "3.12"]' ) }}
    permissions:
      contents: write
    env:
      BRANCH: ${{ github.event.inputs.branch || 'main' }}
      INCLUDE_OPT_DIRS: ${{ github.event.inputs.update_optional_dirs || 'false' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ env.BRANCH }}
          token: ${{ secrets.GH_ACCESS_TOKEN }}

      - name: Configure Git
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Actions"

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install pipenv
        run: pip install pipenv

      - name: Run make refresh-pipfilelock-files
        run: |
          make refresh-pipfilelock-files PYTHON_VERSION=${{ matrix.python-version }} INCLUDE_OPT_DIRS=${{ env.INCLUDE_OPT_DIRS }}

      - name: Commit changes (if any)
        run: |
          git add .
          git diff --cached --quiet && echo "No changes to commit." || git commit -m "Update Pipfile.lock for Python ${{ matrix.python-version }}"

      - name: Pull and push changes
        run: |
          git pull --rebase origin ${{ env.BRANCH }}
          git push origin ${{ env.BRANCH }}
