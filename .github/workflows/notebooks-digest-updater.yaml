---
# The aim of this GitHub workflow is to update the params.env and commit.env files
# This GHA works for both orgs and it checks for the tags generated from the main branch.
name: Update Notebook and Runtime Images as well as the Commits With New SHAs
on:  # yamllint disable-line rule:truthy
  workflow_dispatch:
    inputs:
      branch:
        required: false
        description: "Optional: Provide branch name"
        type: string
      user_hash:
        required: false
        description: "Optional: Specify a Git hash (it should exist in the branch history)"
        type: string
  workflow_call:
    inputs:
      branch:
        required: false
        description: "Optional: Provide branch name"
        type: string
      user_hash:
        required: false
        description: "Optional: Specify a Git hash (it should exist in the branch history)"
        type: string

env:
  USER_HASH: ${{ inputs.user_hash }}
  REPO_ORG: ${{ github.repository_owner }}
  REPO_NAME: ${{ github.event.repository.name }}
  TMP_BRANCH: tmp-digest-sync-${{ github.run_id }}
  BRANCH_NAME: ${{ inputs.branch }}

jobs:
  update-images:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Install Skopeo CLI
        shell: bash
        run: |
          sudo apt-get -y update
          sudo apt-get -y install skopeo

      - name: Configure Git
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Actions"

      - name: Checkout branch
        uses: actions/checkout@v4
        with:
          ref: ${{ env.BRANCH_NAME }}

      - name: Create a new branch
        run: |
         echo ${{ env.TMP_BRANCH }}
         git checkout -b ${{ env.TMP_BRANCH }}
         git push --set-upstream origin ${{ env.TMP_BRANCH }}

      - name: Checkout release branch
        uses: actions/checkout@v4
        with:
          ref: ${{ env.TMP_BRANCH }}
          fetch-depth: 0

      - name: Invoke ci/sha-digest-updater.sh script to handle the updates
        shell: bash
        run: |
          bash "${GITHUB_WORKSPACE}/ci/sha-digest-updater.sh" "${{ env.USER_HASH }}" "${{ env.REPO_ORG }}" "${{ env.BRANCH_NAME }}" "${{ env.REPO_NAME }}"

      - name: Commit Changes
        run: |

          if [[ $(git status --porcelain | wc -l) -gt 0 ]]; then
            git fetch origin ${{ env.TMP_BRANCH }} && \
            git pull origin ${{ env.TMP_BRANCH }} && \
            git add manifests/base/  && \
            git commit -m "Update image related sha digests via notebooks-digest-updater GitHub action" && \
            git push origin ${{ env.TMP_BRANCH }}
          else
            echo "There were no changes detected in the images for the ${{ env.BRANCH_NAME }}"
          fi

      - name: Capture skipped images log (if any)
        id: skipped_log
        run: |
          if [[ -f ${GITHUB_WORKSPACE}/skipped-images.txt && -s ${GITHUB_WORKSPACE}/skipped-images.txt ]]; then
            echo "Found skipped images. Preparing message."
            echo 'log<<EOF' >> $GITHUB_OUTPUT
            cat ${GITHUB_WORKSPACE}/skipped-images.txt >> $GITHUB_OUTPUT
            echo 'EOF' >> $GITHUB_OUTPUT
          else
            echo "log=" >> $GITHUB_OUTPUT
          fi

      - name: pull-request
        run: |

            body="${PR_BODY}"

            if [[ -n "${{ steps.skipped_log.outputs.log }}" ]]; then
              body+="

              :warning: The following images were skipped during update, please push them manually or retriger the GitHub action:
              ${{ steps.skipped_log.outputs.log }}
              "
            fi

            gh pr create --repo https://github.com/$REPO_ORG/$REPO_NAME.git \
              --title "$PR_TITLE" \
              --body "$body" \
              --head $REPO_ORG:${{ env.TMP_BRANCH }} \
              --base ${{ env.BRANCH_NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_TITLE: "[Updater Action] Update Notebook and Runtime Images as well as the Commits With New SHAs"
          PR_BODY: |
            :rocket: This is an automated Pull Request.
            Created by `/.github/workflows/notebooks-digest-updater.yaml`
            - `manifests/base/params.env` file with the latest updated SHA digests of the notebooks.
            - `manifests/base/runtime-*.yamls` file with the latest updated SHA digests of the runtimes.
            - `manifests/base/commit.env` file with the latest commit.
